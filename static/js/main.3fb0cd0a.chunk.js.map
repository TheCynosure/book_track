{"version":3,"sources":["components/IconHeader.js","components/BookPageConfigForm.js","components/BookListEntry.js","components/BookList.js","components/NewBookButton.js","components/NewBookCreationModal.js","components/ReadingGoalProgressBar.js","views/Main.js","views/Stats.js","views/Header.js","index.js"],"names":["IconHeader","props","state","style","opacity","nextProps","nextContext","showBook","this","setTimeout","visibleStyle","callback","setState","transition","open","e","target","className","includes","execCallback","undefined","invisibleStyle","onClick","Container","onTransitionEnd","transitionEnd","React","Component","BookPageConfigForm","Row","Col","lg","md","sm","xs","InputGroup","size","Prepend","Text","FormControl","placeholder","current_page","onChange","event","isNaN","Number","value","length","updateBook","handleProgressChange","span","offset","handleMaxChange","link","Button","variant","href","preventDefault","window","removeBook","BookListEntry","show","book","isComplete","disabled","aria-controls","aria-expanded","finishBook","ListGroup","Item","title","ProgressBar","now","label","Math","floor","width","renderButton","Collapse","in","id","p","m","BookList","books","map","index","NewBookButton","handleNewBook","NewBookCreationModal","isTitleInputValid","isLengthInputValid","possibleGBooks","prefix","fetch","server","then","r","json","result","catch","err","console","error","checkValid","updatePossibleGBooks","hasExactGBookMatch","getExactGBookMatches","number","onAdd","filter","Modal","onHide","onCancel","backdrop","Header","closeButton","Title","Body","onTitleChange","Append","onMaxChange","Footer","handleSubmit","ReadingGoalProgressBar","progress","current","total","Main","history","showAddModal","windowSize","height","showConfetti","isLoaded","innerWidth","innerHeight","addEventListener","handleResize","getAllBooks","getBooks","fromHistory","location","res","status","log","book_title","new_current_page","new_length","a","slice","book_to_update","find","headers","Headers","append","settings","method","body","JSON","stringify","request","Request","finished_book","curr_book","spawnConfetti","addBook","toHistory","confetti","reset","curr","recycle","numberOfPieces","onConfettiComplete","promptNewBookModal","renderBookHistory","isTitleUnique","renderMainScreen","ReactTimeout","Stats","fluid","mainView","overflowY","overflowX","switchViews","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fb0cd0a.chunk.js","sourcesContent":["import React from 'react';\nimport {Animated, Easing, View} from 'react-native';\nimport {Container, Collapse} from 'react-bootstrap';\nimport {Book, GraphUp} from 'react-bootstrap-icons';\n\nclass IconHeader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            style: {\n                opacity: 1\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.showBook !== this.props.showBook) {\n            // They want us to switch! Start the visibility transition.\n            setTimeout(() => this.visibleStyle(), 10);\n        }\n    }\n\n    visibleStyle(callback) {\n        this.callback = callback;\n        this.setState({\n            style: {\n                opacity: 1,\n                transition: 'all .2s ease'\n            }\n        });\n    }\n\n    invisibleStyle(callback) {\n        this.callback = callback;\n        this.setState({\n            open: false,\n            style: {\n                opacity: 0,\n                transition: 'all .2s ease'\n            }\n        });\n    }\n\n    transitionEnd(e) {\n        // Call the callback after the animation is officially over.\n        if (e.target.className.includes(\"IconHeader\")) {\n            this.execCallback();\n        }\n    }\n\n    execCallback() {\n        if (this.callback !== undefined) {\n            this.callback();\n        }\n    }\n\n    onClick() {\n        // First make this invisible.\n        this.invisibleStyle(() => {\n            // Once invisible, we want to call the parents function.\n            this.props.onClick();\n        })\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-5 mb-5 text-center\">\n                <h1\n                    onTransitionEnd={(e) => this.transitionEnd(e)}\n                    className={\"IconHeader\"}\n                    style={this.state.style}\n                >\n                    <Book />\n                </h1>\n            </Container>\n        );\n    }\n}\n\nexport default IconHeader;\n","import React from 'react';\nimport {Collapse, Button, FormControl, ListGroup, Container, Row, Col, ProgressBar, InputGroup} from 'react-bootstrap';\nimport {PencilSquare, Check, Trash, Globe} from 'react-bootstrap-icons';\n\nfunction handleProgressChange(event, props) {\n  if (isNaN(Number(event.target.value))) {\n    return;\n  }\n  if (Number(event.target.value) > props.length) {\n    event.target.value = props.length;\n  }\n  props.updateBook(Number(event.target.value), props.length);\n}\n\nfunction handleMaxChange(event, props) {\n  if (isNaN(Number(event.target.value))) {\n    return;\n  }\n  props.updateBook(props.current_page, Number(event.target.value));\n}\n\nexport default function BookPageConfigForm(props) {\n  return (\n    <Container className=\"w-100 p-0\">\n      <hr></hr>\n      <Row className=\"pt-3 pb-3 align-items-center\">\n        <Col\n            lg={3}\n            md={3}\n            sm={3}\n            xs={12}\n            className=\"px-0 py-2\"\n        >\n          <InputGroup size=\"sm\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>\n                Page #\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder={props.current_page}\n              onChange={(event) => handleProgressChange(event, props)}\n            />\n          </InputGroup>\n        </Col>\n        <Col\n            lg={{ span: 4, offset: 1 }}\n            md={{ span: 4, offset: 1 }}\n            sm={{ span: 4, offset: 1 }}\n            xs={12}\n            className=\"px-0 py-2\"\n        >\n          <InputGroup size=\"sm\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>\n                Max Page #\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder={props.length}\n              onChange={(event) => handleMaxChange(event, props)}\n            />\n          </InputGroup>\n        </Col>\n        {(props.link === '')? <></> :\n            <Col\n                className=\"px-0 py-2 text-center\"\n                lg={{ span: 1, offset: 0}}\n                md={{ span: 1, offset: 0 }}\n                sm={{ span: 1, offset: 4 }}\n                xs={{ span: 1, offset: 0 }}\n            >\n              <Button\n                variant=\"info\"\n                className=\"btn-sm\"\n                href={props.link}\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.open(props.link);\n                }}\n              >\n                <Globe />\n              </Button>\n            </Col>}\n        <Col\n             className=\"px-0 py-2 text-center\"\n             lg={{ span: 1, offset: (props.link === '')? 3 : 2 }}\n             md={{ span: 1, offset: (props.link === '')? 3 : 2 }}\n             sm={{ span: 1, offset: (props.link === '')? 5 : 3 }}\n             xs={{ span: 1, offset: 9 }}\n        >\n          <Button\n            variant=\"danger\"\n            className=\"btn-sm\"\n            onClick={() => props.removeBook()}\n          >\n            <Trash/> \n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Collapse, Button, FormControl, ListGroup, Container, Row, Col, ProgressBar, InputGroup} from 'react-bootstrap';\nimport {PencilSquare, Check, Trash} from 'react-bootstrap-icons';\nimport BookPageConfigForm from './BookPageConfigForm';\n\nexport default class BookListEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      show: true,\n      style: {\n        opacity: 0,\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Shortly after mounting we will render the element visible.\n    setTimeout(() => this.visibleStyle(), 10);\n  }\n  //\n  // componentWillReceiveProps(newProps, nextContext) {\n  //   if () {\n  //     return this.invisibleStyle();\n  //   }\n  //\n  //   // Otherwise, we should be visible!\n  //   this.setState({\n  //     show: true\n  //   });\n  //   setTimeout(() => this.visibleStyle(), 10);\n  // }\n\n  visibleStyle() {\n    this.setState({\n      style: {\n        opacity: 1,\n        transition: 'all .3s ease'\n      }\n    })\n  }\n\n  invisibleStyle(callback) {\n    this.callback = callback;\n    this.setState({\n      open: false,\n      style: {\n        opacity: 0,\n        transition: 'all .3s ease'\n      }\n    });\n  }\n\n  transitionEnd(e) {\n    // Call the callback after the animation is officially over.\n   if (e.target.className.includes('BookListAnimation')) {\n      if (this.state.style.opacity === 0) {\n        this.setState({\n          show: false\n        }, this.execCallback);\n      }\n    }\n  }\n\n  execCallback() {\n    if (this.callback !== undefined) {\n      this.callback();\n    }\n  }\n\n  isComplete() {\n    return this.props.book.current_page === this.props.book.length && !this.state.open;\n  }\n\n  renderButton() {\n    if (this.isComplete()) {\n      // A check button to trigger adding to the completed list.\n      return (\n          <Button\n              variant={\"success\"}\n              className=\"btn-sm\"\n              onClick={() => this.onClick()}\n              disabled={this.props.disabled}\n          >\n            <Check />\n          </Button>\n      );\n    } else {\n      // Otherwise the button to trigger the collapse section.\n      return (\n          <Button\n              variant={this.state.open? \"secondary\" : \"primary\"}\n              onClick={() => this.onClick()}\n              aria-controls=\"book-config-collapse\"\n              aria-expanded={this.state.open}\n              className=\"btn-sm\"\n              disabled={this.props.disabled}\n          >\n            <PencilSquare />\n          </Button>\n      );\n    }\n  }\n\n  onClick() {\n    if (this.isComplete()) {\n      this.invisibleStyle(() => this.props.finishBook());\n    } else {\n      this.setState({\n        open: !this.state.open\n      });\n    }\n  }\n\n  render() {\n    // We and this with the show so that when it is invisible we force React to\n    // unmount the component (otherwise it would stick around forever).\n    // Also cool animation with remove and update book. Basically, once the\n    // style is invisible, we run that callback and then unmount because\n    // show becomes false.\n    return (\n        this.state.show &&\n        <ListGroup.Item style={this.state.style} onTransitionEnd={(event) => this.transitionEnd(event)} className=\"BookListAnimation\">\n          <Container>\n            <Row className=\"align-items-center\">\n              <Col lg={4} sm={12} xs={12} className=\"px-0 py-2\">\n                <h4 className=\"mb-0\">{this.props.book.title}</h4>\n              </Col>\n              <Col lg={7} sm={12} xs={12} className=\"px-0 py-2\">\n                <ProgressBar\n                    variant={this.props.book.current_page >= this.props.book.length? \"success\" : \"info\"}\n                    now={(this.props.book.current_page / this.props.book.length) * 100}\n                    label={Math.floor((this.props.book.current_page / this.props.book.length) * 100) + '%'}\n                    style={{width: \"100%\"}}\n                    disabled={this.props.disabled}\n                />\n              </Col>\n              <Col lg={{ span: 1, offset: 0}} sm={{ span: 12, offset: 0 }} xs={{ span: 12, offset: 0}} className=\"py-2 text-center\">\n                {this.renderButton()}\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Collapse in={this.state.open}>\n                  <div id=\"book-config-collapse\">\n                    <div className=\"pt-3 pb-3\">\n                      <BookPageConfigForm\n                          updateBook={(p, m) => this.props.updateBook(p, m) }\n                          removeBook={() => this.invisibleStyle(() => this.props.removeBook()) }\n                          // current_page={this.props.book.current_page}\n                          // length={this.props.book.length}\n                          {...this.props.book}\n                      />\n                    </div>\n                  </div>\n                </Collapse>\n              </Col>\n            </Row>\n          </Container>\n        </ListGroup.Item>\n    );\n  }\n}","import React from 'react';\nimport {Container, Row, Col, ListGroup, InputGroup} from 'react-bootstrap';\nimport BookListEntry from './BookListEntry';\n\nexport default function BookList(props) {\n  // If active then render the extra information.\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <ListGroup>\n            {props.books.map((book, index) => \n              <BookListEntry\n                book={book}\n                updateBook={(current_page, length) => props.updateBook(book.title)(current_page, length)}\n                removeBook={() => props.removeBook(book.title)}\n                finishBook={() => props.finishBook(book.title)}\n                key={book.title}\n                disabled={props.disabled}\n              />\n            )}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React from 'react';\nimport {Container, Button, Row, Col} from 'react-bootstrap';\nimport {PlusSquare} from 'react-bootstrap-icons';\n\nexport default class NewBookButton extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Row className=\"text-center\">\n          <Col>\n            <Button className=\"mt-3 mb-3 btn-sm\" onClick={() => this.props.handleNewBook()}><PlusSquare/></Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, {forwardRef, useState} from 'react';\nimport {Button, Modal, Container, Row, Col, InputGroup, FormControl, Dropdown} from 'react-bootstrap';\nimport {Globe} from \"react-bootstrap-icons\";\n\nconst server = 'https://book-track-backend.herokuapp.com/'\n\nexport default class NewBookCreationModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      length: 1,\n      isTitleInputValid: false,\n      isLengthInputValid: false,\n      possibleGBooks: []\n    }\n  }\n\n  updatePossibleGBooks(prefix) {\n    const location = server + 'gbooks/search/' + prefix;\n    fetch(location).then(r => {\n        r.json().then(result => {\n            this.setState({ possibleGBooks: result });\n        }).catch(err => {\n            console.error(err);\n            this.setState({ possibleGBooks: [] });\n        })\n    });\n  }\n\n  onTitleChange(event) {\n    if (event.target.value === null ||\n        event.target.value.length === 0 ||\n        !this.props.checkValid(event.target.value)) {\n      this.setState({title: event.target.value, isTitleInputValid: false});\n      return;\n    }\n    this.updatePossibleGBooks(event.target.value);\n    this.setState({title: event.target.value, isTitleInputValid: true});\n  }\n\n  onMaxChange(event) {\n    if (isNaN(Number(event.target.value)) || Number(event.target.value) <= 0) {\n      this.setState({length: 1, isLengthInputValid: false});\n      return;\n    }\n    this.setState({length: event.target.value, isLengthInputValid: true});\n  }\n\n  handleSubmit() {\n    let title = this.state.title;\n    let length = this.state.length;\n    let link = this.hasExactGBookMatch()?\n        'https://www.gutenberg.org/ebooks/' + this.getExactGBookMatches()[0].number:\n        '';\n    this.setState({\n      title: '',\n      length: 1,\n      isTitleInputValid: false,\n      isLengthInputValid: false,\n      possibleGBooks: []\n    });\n    this.props.onAdd({ title: title, length: length, link: link });\n  }\n\n  hasExactGBookMatch() {\n    return this.getExactGBookMatches().length >= 1;\n  }\n\n  getExactGBookMatches() {\n    return this.state.possibleGBooks.filter((book) => {\n      return book.title === this.state.title;\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => this.props.onCancel()}\n        backdrop=\"static\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add A Book</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row className=\"m-2\">  \n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      Title\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                      onChange={(event) => this.onTitleChange(event)}\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>\n                      <Globe className={\n                        this.state.possibleGBooks.length > 0?\n                            (this.hasExactGBookMatch() ? \"text-success\" : \"text-info\"):\n                            \"text-secondary\"}/>\n                    </InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Col>\n            </Row>\n            <Row className=\"m-2\">\n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      Max Page #\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    onChange={(event) => this.onMaxChange(event)} \n                  />\n                </InputGroup>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => this.props.onCancel()}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => this.handleSubmit()}\n            disabled={!(this.state.isTitleInputValid && this.state.isLengthInputValid)}\n          >\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport {Container, ProgressBar} from 'react-bootstrap';\n\nexport default function ReadingGoalProgressBar(props) {\n    let progress = props.current;\n    let total = props.total;\n    // So when the animation loads the bar goes left to right and not the other\n    // way. Doesn't matter for label because won't show unless percentage\n    // is non-zero.\n    if (progress === 0 && total === 0) {\n        total = 1;\n    }\n\n    return (\n        <Container className=\"w-100 mt-3 mb-3\">\n            <ProgressBar\n                now={Math.floor((progress / total) * 100)}\n                label={progress + \" / \" + total}\n            />\n        </Container>\n    );\n}\n","import React from 'react';\nimport IconHeader from '../components/IconHeader';\nimport BookList from '../components/BookList';\nimport {Container, Spinner, Row, Col} from 'react-bootstrap';\nimport NewBookButton from '../components/NewBookButton';\nimport NewBookCreationModal from '../components/NewBookCreationModal';\nimport Confetti from 'react-confetti';\nimport ReactTimeout from 'react-timeout';\nimport ReadingGoalProgressBar from '../components/ReadingGoalProgressBar';\n\nconst server = 'https://book-track-backend.herokuapp.com/'\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            history: [],\n            showAddModal: false,\n            windowSize: {width: undefined, height: undefined},\n            showConfetti: false,\n            isLoaded: false,\n        }\n    }\n\n    handleResize() {\n        this.setState({\n            windowSize: {\n                width: window.innerWidth,\n                height: window.innerHeight,\n            }\n        });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", () => this.handleResize());\n        this.getAllBooks();\n    }\n\n    componentWillUnmount() {\n        window.addEventListener(\"resize\", () => this.handleResize());\n    }\n\n    async getAllBooks() {\n        await this.getBooks();\n        await this.getBooks(true);\n    }\n\n    async getBooks(fromHistory = false) {\n        // Before the fetch make sure the page knows we are loading.\n        const location =\n            server + ((fromHistory) ? 'history' : 'books');\n        fetch(location).then((res) => {\n                if (res.status === 304) {\n                    // There is nothing to change\n                    this.setState({isLoaded: false});\n                } else {\n                    res.json().then((result) => {\n                        // Response was successful!\n                        if (fromHistory) {\n                            this.setState({history: result, isLoaded: true});\n                        } else {\n                            this.setState({books: result, isLoaded: true});\n                        }\n                    }).catch((error) => {\n                        console.log(error)\n                        this.setState({isLoaded: true, error});\n                    });\n                }\n            },\n            (error) => {\n                // TODO: We should retry on network error.\n                console.error(error);\n                this.setState({isLoaded: true, error});\n            });\n    }\n\n    updateBook(book_title) {\n        return async (new_current_page, new_length) => {\n            let books = this.state.books.slice();\n            const book_to_update =\n                books.find(book => book.title === book_title);\n            book_to_update.current_page = new_current_page;\n            book_to_update.length = new_length;\n\n            const headers = new Headers();\n            headers.append('Content-Type', 'application/json');\n\n            const settings = {\n                method: 'PUT',\n                headers,\n                body: JSON.stringify(book_to_update)\n            }\n\n            const request = new Request(server + 'books', settings);\n            const response = await fetch(request);\n\n            if (response.status === 200) {\n                this.setState({isLoaded: true});\n                await this.getAllBooks();\n            }\n        }\n    }\n\n    async removeBook(book_title) {\n        this.setState({isLoaded: false});\n        let books = this.state.books.slice();\n        let finished_book =\n            books.filter(curr_book => curr_book.title === book_title);\n        if (finished_book.length === 0) {\n            console.error('No matching book for one deleted.');\n            return;\n        }\n        console.log(finished_book[0].title)\n\n        const headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        const settings = {\n            method: 'DELETE',\n            headers,\n            body: JSON.stringify(finished_book[0])\n        }\n\n        const request = new Request(server + 'books', settings);\n        const response = await fetch(request);\n\n        if (response.status === 200) {\n            this.setState({isLoaded: true});\n            await this.getAllBooks();\n        }\n\n        return finished_book;\n    }\n\n    finishBook(book_title) {\n        let finished_book =\n            this.state.books.filter(book => book.title === book_title)[0];\n        this.removeBook(book_title).then(() => {\n            this.spawnConfetti();\n            this.addBook(finished_book, true);\n        });\n    }\n\n    promptNewBookModal() {\n        this.setState({showAddModal: true});\n    }\n\n    async addBook(book, toHistory = false) {\n        this.setState({isLoaded: false});\n        // We are going to post the new book, and on success re-fetch all the data.\n        book.current_page = (toHistory)? book.length : 0;\n        const headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        const settings = {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(book)\n        }\n\n        const location =\n            server + ((toHistory) ? \"history\" : \"books\");\n\n        this.setState({showAddModal: false});\n        const request = new Request(location, settings);\n        const response = await fetch(request);\n\n        if (response.status === 200) {\n            this.setState({isLoaded: true});\n            await this.getAllBooks();\n        }\n    }\n\n    spawnConfetti() {\n        this.setState({\n            showConfetti: true\n        });\n    }\n\n    onConfettiComplete(confetti) {\n        this.setState({showConfetti: false})\n        confetti.reset();\n    }\n\n    isTitleUnique(title) {\n        return this.state.books.filter((curr) => curr.title === title).length === 0\n    }\n\n    renderBookHistory() {\n        if (this.state.history.length > 0) {\n            return (\n                <Container className=\"p-0\">\n                    <Row className=\"p-0\">\n                        <Col>\n                            <ReadingGoalProgressBar\n                                current={this.state.history.length}\n                                total={this.state.history.length + this.state.books.length}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"p-0\">\n                        <Col>\n                            <BookList\n                                books={this.state.history}\n                                disabled={true}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        }\n    }\n\n    renderMainScreen() {\n        const width = this.state.windowSize.width;\n        const height = this.state.windowSize.height;\n        return (\n            <Container\n                lg={8}\n                md={8}\n                sm={8}\n                xs={12}\n            >\n                <Confetti\n                    width={width}\n                    height={height}\n                    recycle={false}\n                    numberOfPieces={this.state.showConfetti ? 500 : 0}\n                    onConfettiComplete={(confetti) => this.onConfettiComplete(confetti)}\n                />\n                <BookList\n                    books={this.state.books}\n                    updateBook={(index) => this.updateBook(index)}\n                    removeBook={(index) => this.removeBook(index)}\n                    finishBook={(index) => this.finishBook(index)}\n                />\n                <NewBookButton handleNewBook={() => this.promptNewBookModal()}/>\n                {this.renderBookHistory()}\n                <NewBookCreationModal\n                    show={this.state.showAddModal}\n                    onAdd={(book) => this.addBook(book)}\n                    onCancel={() => this.setState({showAddModal: false})}\n                    checkValid={(title) => this.isTitleUnique(title)}\n                />\n            </Container>\n        );\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.renderMainScreen()}\n            </Container>\n        );\n    }\n}\n\nexport default ReactTimeout(Main);\n","import React from \"react\";\nimport {Container} from \"react-bootstrap\";\n\nexport default class Stats extends React.Component {\n    render() {\n        return (\n            <Container fluid>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport {Container} from 'react-bootstrap'\nimport IconHeader from \"../components/IconHeader\";\nimport Main from \"./Main\";\nimport Stats from \"./Stats\";\n\nexport default class Header extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mainView: true\n        }\n    }\n\n    switchViews() {\n        this.setState({ mainView: !this.state.mainView });\n    }\n\n    render() {\n        return (\n            <Container fluid style={{overflowY: 'auto', overflowX: 'hidden'}}>\n                <IconHeader onClick={() => this.switchViews()} showBook={this.state.mainView}/>\n                {\n                    this.state.mainView? <Main /> : <Stats />\n                }\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./views/Header\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}